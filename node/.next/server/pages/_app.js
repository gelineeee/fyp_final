/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/ridoContext.js":
/*!********************************!*\
  !*** ./context/ridoContext.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RidoProvider\": () => (/* binding */ RidoProvider),\n/* harmony export */   \"useRido\": () => (/* binding */ useRido)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @faker-js/faker */ \"@faker-js/faker\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__]);\n_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"C:\\\\Users\\\\gelin\\\\fyp-blockchain\\\\node\\\\context\\\\ridoContext.js\";\n\n\n\n\nconst RidoContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nconst RidoProvider = ({\n  children\n}) => {\n  const {\n    0: pickup,\n    1: setPickup\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const {\n    0: dropoff,\n    1: setDropoff\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const {\n    0: pickupCoordinates,\n    1: setPickupCoordinates\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: dropoffCoordinates,\n    1: setDropoffCoordinates\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: currentAccount,\n    1: setCurrentAccount\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: currentUserAccountType,\n    1: setCurrentUserAccountType\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const {\n    0: selectedRide,\n    1: setSelectedRide\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: price,\n    1: setPrice\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: basePrice,\n    1: setBasePrice\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: routes,\n    1: setRoutes\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: ride,\n    1: setRide\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: driverRide,\n    1: setDriverRide\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: userDropoffCoordinates,\n    1: setUserDropoffCoordinates\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: userPickupCoordinates,\n    1: setUserPickupCoordinates\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const {\n    0: userRoutes,\n    1: setUserRoutes\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: rider,\n    1: setRider\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const {\n    0: acceptRide,\n    1: setAccceptedRide\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false); // to check whether is true, if true then will call the update function\n\n  const {\n    0: cancelled,\n    1: setCancelled\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const {\n    0: driverStart,\n    1: setDriverStart\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const {\n    0: driverEnd,\n    1: setDriverEnd\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const {\n    0: driverCancelled,\n    1: setDriverCancelled\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const {\n    0: notSignup,\n    1: setNotSignup\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const {\n    0: ridePoint,\n    1: setRidePoint\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const {\n    0: points,\n    1: setPoints\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const {\n    0: signedIn,\n    1: setSignedIn\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n  let metamask;\n\n  if (false) {}\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    checkIfWalletIsConnected();\n  }, [signedIn]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!cancelled) return;\n    updateCancelledRide();\n  }, [cancelled]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!driverCancelled) return;\n    updateDriverCancelledRide();\n  }, [driverCancelled]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!ridePoint) return;\n    updatePoint();\n  }, [ridePoint]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!points) return;\n    deductClaimedPoints();\n  }, [points]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!driverStart) return;\n    updateDriverStartRide();\n  }, [driverStart]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!driverEnd) return;\n    getPoint();\n  }, [driverEnd]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!currentUserAccountType || currentUserAccountType == \"Rider\") return;\n    requestToGetDriverRide(currentAccount);\n  }, [currentUserAccountType]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!currentAccount) return; // requestToGetCurrentUsersInfo(currentAccount);\n\n    requestToGetRides(currentAccount);\n  }, [currentAccount]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!rider) return;\n    requestToGetRidesForDriver(rider);\n  }, [rider]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!acceptRide) return;\n    updateRideStatus();\n  }, [acceptRide]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (ride.length != 0) {\n      (async () => {\n        await Promise.all([createLocationCoordinateForUserPromise(ride[0].pickup, \"pickup\"), createLocationCoordinateForUserPromise(ride[0].dropoff, \"dropoff\")]);\n      })();\n    } else return;\n  }, [ride]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (driverRide.length != 0) {\n      (async () => {\n        await Promise.all([createLocationCoordinateForUserPromise(driverRide[0].pickup, \"pickup\"), createLocationCoordinateForUserPromise(driverRide[0].dropoff, \"dropoff\")]);\n      })();\n    } else return;\n  }, [driverRide]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!userPickupCoordinates || !userDropoffCoordinates) return;\n\n    (async () => {\n      try {\n        const response = await fetch(\"/api/map/getDirection\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            pickupCoordinates: `${userPickupCoordinates[0]},${userPickupCoordinates[1]}`,\n            dropoffCoordinates: `${userDropoffCoordinates[0]},${userDropoffCoordinates[1]}`\n          })\n        });\n        const data = await response.json();\n        setUserRoutes(data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [userPickupCoordinates, userDropoffCoordinates]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!pickupCoordinates || !dropoffCoordinates) return;\n\n    (async () => {\n      try {\n        const response = await fetch(\"/api/map/getDuration\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            pickupCoordinates: `${pickupCoordinates[0]},${pickupCoordinates[1]}`,\n            dropoffCoordinates: `${dropoffCoordinates[0]},${dropoffCoordinates[1]}`\n          })\n        });\n        const data = await response.json();\n        setBasePrice(Math.round(await data.data));\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [pickupCoordinates, dropoffCoordinates]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!pickupCoordinates || !dropoffCoordinates) return;\n\n    (async () => {\n      try {\n        const response = await fetch(\"/api/map/getDirection\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            pickupCoordinates: `${pickupCoordinates[0]},${pickupCoordinates[1]}`,\n            dropoffCoordinates: `${dropoffCoordinates[0]},${dropoffCoordinates[1]}`\n          })\n        });\n        const data = await response.json();\n        setRoutes(data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [pickupCoordinates, dropoffCoordinates]);\n\n  const checkIfWalletIsCreated = async () => {\n    if (!window.ethereum) return;\n\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      requestToGetCurrentUsersInfo(addressArray[0]);\n\n      if (currentUser) {\n        router.push(\"/\");\n        setCurrentAccount(currentUser.walletAddress);\n      } else {\n        router.push(\"/signin\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    if (!window.ethereum) return;\n\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n\n      if (addressArray.length > 0) {\n        setCurrentAccount(addressArray[0]);\n        requestToGetCurrentUsersInfo(addressArray[0]); // requestToCreateUserOnSanity(addressArray[0]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return;\n\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      if (addressArray.length > 0) {\n        setCurrentAccount(addressArray[0]); // requestToCreateUserOnSanity(addressArray[0]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const createLocationCoordinateForUserPromise = (locationName, locationType) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(\"api/map/getLocationCoordinates\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            location: locationName\n          })\n        });\n        const data = await response.json();\n\n        if (data.message === \"success\") {\n          switch (locationType) {\n            case \"pickup\":\n              setUserPickupCoordinates(data.data);\n              break;\n\n            case \"dropoff\":\n              setUserDropoffCoordinates(data.data);\n              break;\n          }\n\n          resolve();\n        } else {\n          reject();\n        }\n      } catch (error) {\n        console.error(error);\n        reject();\n      }\n    });\n  };\n\n  const createLocationCoordinatePromise = (locationName, locationType) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(\"api/map/getLocationCoordinates\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            location: locationName\n          })\n        });\n        const data = await response.json();\n\n        if (data.message === \"success\") {\n          switch (locationType) {\n            case \"pickup\":\n              setPickupCoordinates(data.data);\n              break;\n\n            case \"dropoff\":\n              setDropoffCoordinates(data.data);\n              break;\n          }\n\n          resolve();\n        } else {\n          reject();\n        }\n      } catch (error) {\n        console.error(error);\n        reject();\n      }\n    });\n  };\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (pickup && dropoff) {\n      (async () => {\n        await Promise.all([createLocationCoordinatePromise(pickup, \"pickup\"), createLocationCoordinatePromise(dropoff, \"dropoff\")]);\n      })();\n    } else return;\n  }, [pickup, dropoff]);\n\n  const requestToCreateUserOnSanity = async (address, username, phone, account, carModel, carplate) => {\n    if (!window.ethereum) return;\n\n    try {\n      await fetch(\"/api/db/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userWalletAddress: address,\n          name: username,\n          contactNumber: phone,\n          accountType: account,\n          carModel: carModel,\n          carPlate: carplate\n        })\n      });\n      router.push(\"/\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const requestToGetCurrentUsersInfo = async walletAddress => {\n    try {\n      const response = await fetch(`/api/db/getUserInfo?walletAddress=${walletAddress}`);\n      const data = await response.json();\n      setCurrentUser(data.data);\n      console.log(data.data);\n      setCurrentUserAccountType(data.data.accountType);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const requestToGetRides = async walletAddress => {\n    try {\n      console.log(walletAddress);\n      const response = await fetch(`/api/db/getRides?walletAddress=${walletAddress}`);\n      const data = await response.json();\n      console.log(data);\n      setRide(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const requestToGetRidesForDriver = async walletAddress => {\n    try {\n      console.log(walletAddress);\n      const response = await fetch(`/api/db/getRides?walletAddress=${walletAddress}`);\n      const data = await response.json();\n      console.log(data);\n      setAccceptedRide(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const requestToGetDriverRide = async walletAddress => {\n    try {\n      console.log(walletAddress);\n      const response = await fetch(`/api/db/getDriverRides?walletAddress=${walletAddress}`);\n      const data = await response.json();\n      console.log(data);\n      setDriverRide(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateRideStatus = async () => {\n    try {\n      await fetch(\"/api/db/updateUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: acceptRide[0]._id,\n          driver: currentAccount,\n          rideStatus: \"Matched\"\n        })\n      });\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateCancelledRide = async () => {\n    try {\n      await fetch(\"/api/db/updateRiderCancel\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: ride[0]._id,\n          rideStatus: \"Cancelled\"\n        })\n      });\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateDriverCancelledRide = async () => {\n    try {\n      await fetch(\"/api/db/updateRiderCancel\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: driverRide[0]._id,\n          rideStatus: \"Created\"\n        })\n      });\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateDriverStartRide = async () => {\n    try {\n      await fetch(\"/api/db/updateRiderCancel\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: driverRide[0]._id,\n          rideStatus: \"Ongoing\"\n        })\n      });\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getPoint = async () => {\n    try {\n      console.log(driverRide[0].rideCategory);\n      const response = await fetch(`/api/db/getRidePoint?title=${driverRide[0].rideCategory}`);\n      const data = await response.json();\n      console.log(data);\n      setRidePoint(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deductClaimedPoints = async () => {\n    try {\n      const deductPoints = currentUser.points;\n      await fetch(\"/api/db/deductUserPoint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: currentUser.walletAddress,\n          points: 0\n        })\n      });\n      console.log(\"Done user\");\n      await fetch(\"/api/db/deductTotalPoints\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: \"d2e589df-c4bd-4364-bea7-a5f46f1a345e\",\n          points: deductPoints\n        })\n      });\n      console.log(\"Done points\");\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updatePoint = async () => {\n    try {\n      await fetch(\"/api/db/updateUserPoint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: driverRide[0].driver._ref,\n          points: ridePoint[0].pointsEarned\n        })\n      });\n      console.log(\"Done driver\");\n      await fetch(\"/api/db/updateUserPoint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: driverRide[0].passenger._ref,\n          points: ridePoint[0].pointsEarned\n        })\n      });\n      console.log(\"Done rider\");\n      console.log(ridePoint[0].pointsEarned * 2);\n      await fetch(\"/api/db/updateTotalPoints\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: \"d2e589df-c4bd-4364-bea7-a5f46f1a345e\",\n          points: ridePoint[0].pointsEarned * 2\n        })\n      });\n      console.log(\"Done points\");\n      await fetch(\"/api/db/updateRiderCancel\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: driverRide[0]._id,\n          rideStatus: \"Ended\"\n        })\n      });\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const contextValues = {\n    pickup,\n    setPickup,\n    dropoff,\n    setDropoff,\n    pickupCoordinates,\n    setPickupCoordinates,\n    dropoffCoordinates,\n    setDropoffCoordinates,\n    connectWallet,\n    currentAccount,\n    setCurrentAccount,\n    currentUser,\n    setCurrentUser,\n    price,\n    selectedRide,\n    setSelectedRide,\n    setPrice,\n    basePrice,\n    metamask,\n    routes,\n    ride,\n    userDropoffCoordinates,\n    userPickupCoordinates,\n    userRoutes,\n    rider,\n    setRider,\n    setRide,\n    driverRide,\n    setDriverRide,\n    setCancelled,\n    setCurrentUserAccountType,\n    currentUserAccountType,\n    notSignup,\n    setNotSignup,\n    requestToCreateUserOnSanity,\n    requestToGetCurrentUsersInfo,\n    driverCancelled,\n    setDriverCancelled,\n    driverStart,\n    setDriverStart,\n    driverEnd,\n    setDriverEnd,\n    setPoints,\n    setSignedIn\n  };\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(RidoContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 646,\n    columnNumber: 5\n  }, undefined);\n};\nfunction useRido() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RidoContext);\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/ridoContext.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_ridoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/ridoContext */ \"./context/ridoContext.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_context_ridoContext__WEBPACK_IMPORTED_MODULE_1__]);\n_context_ridoContext__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"C:\\\\Users\\\\gelin\\\\fyp-blockchain\\\\node\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_context_ridoContext__WEBPACK_IMPORTED_MODULE_1__.RidoProvider, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFZSxTQUFTQyxHQUFULENBQWE7RUFBRUMsU0FBRjtFQUFhQztBQUFiLENBQWIsRUFBdUM7RUFDcEQsb0JBQ0UsOERBQUMsOERBQUQ7SUFBQSx1QkFDRSw4REFBQyxTQUFELG9CQUFlQSxTQUFmO01BQUE7TUFBQTtNQUFBO0lBQUE7RUFERjtJQUFBO0lBQUE7SUFBQTtFQUFBLFFBREY7QUFLRCxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZS8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJAL3N0eWxlcy9nbG9iYWxzLmNzc1wiO1xuaW1wb3J0IHsgUmlkb1Byb3ZpZGVyIH0gZnJvbSBcIi4uL2NvbnRleHQvcmlkb0NvbnRleHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xuICByZXR1cm4gKFxuICAgIDxSaWRvUHJvdmlkZXI+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC9SaWRvUHJvdmlkZXI+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiUmlkb1Byb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "@faker-js/faker":
/*!**********************************!*\
  !*** external "@faker-js/faker" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = import("@faker-js/faker");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();